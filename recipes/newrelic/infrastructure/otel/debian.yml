# Visit our schema definition for additional information on this file format.
# https://github.com/newrelic/open-install-library/blob/main/docs/recipe-spec/recipe-spec.md#schema-definition

name: nr-open-telemetry-collector-installer
displayName: New Relic Open Telemetry Collector
description: New Relic install recipe for the Open Telemetry Collector
repository: https://github.com/newrelic/opentelemetry-collector-releases

dependencies:
  - infrastructure-agent-installer

installTargets:
  - type: host
    os: linux
    platformFamily: "debian"
    kernelArch: x86_64
  - type: host
    os: linux
    platform: "ubuntu"  

keywords:
  - Open Telmetry
  - Otel
  - Infrastructure
  - Agent
  - Linux
  - Debian
  - Jessie
  - Stretch
  - Buster
  - Ubuntu
  - Precise
  - Trusty
  - Xenial
  - Bionic
  - Focal
  - Jammy


install:
  version: "3"
  silent: true

  tasks:
    default:
      cmds:
        - task: assert_infra
        - task: add_gpg_key
        - task: add_nr_source
        - task: update_apt_nr_source
        - task: install_otel_collector
        - task: update_license_key
        - task: update_otel_end_point
        - task: restart_otel_service
        - task: assert_otel_collector_status_ok
        - task: post_instal

    
    assert_infra:
      cmds:
        - |
          IS_INFRA_INSTALLED=$(sudo ps aux | grep newrelic-infra-service | grep -v grep | wc -l)
          if [ $IS_INFRA_INSTALLED -eq 0 ] ; then
            echo "The infrastructure agent is required to install this integration, we recommend going through our guided install path for this pre-requisite which can be found here:  https://docs.newrelic.com/docs/full-stack-observability/observe-everything/get-started/new-relic-guided-install-overview" >&2
            exit 1
          fi
          
    add_gpg_key:
      cmds:
        - |
          curl -s {{.NEW_RELIC_DOWNLOAD_URL}}infrastructure_agent/gpg/newrelic-infra.gpg | apt-key add -
      silent: true

    add_nr_source:
      cmds:
        - |
          ARCH="amd64"
          IS_ARM=$(uname -m | grep -i 'aarch64' | wc -l)
          if [ $IS_ARM -gt 0 ] ; then
            ARCH="arm64"
          fi
          if [ -n "{{.DEBIAN_CODENAME}}" ]; then
            printf "deb [arch="$ARCH"] {{.NEW_RELIC_DOWNLOAD_URL}}infrastructure_agent/linux/apt {{.DEBIAN_CODENAME}} main" | tee /etc/apt/sources.list.d/newrelic-infra.list > /dev/null
          else
            printf "deb [arch="$ARCH"] {{.NEW_RELIC_DOWNLOAD_URL}}infrastructure_agent/linux/apt {{.DEBIAN_VERSION_CODENAME}} main" | tee /etc/apt/sources.list.d/newrelic-infra.list > /dev/null
          fi
      vars:
        DEBIAN_CODENAME:
          sh: awk -F= '/VERSION_CODENAME/ {print $2}' /etc/os-release
        DEBIAN_VERSION_CODENAME:
          sh: cat /etc/os-release | grep "VERSION=\"[0-9] " | awk -F " " '{print $2}' | sed 's/[()"]//g'
      silent: true
      
    update_apt_nr_source:
      cmds:
        - |
          # Get latest definitions and skip any failure because of deprecation
          OPTIONS="-o DPkg::Lock::Timeout=60 -o Acquire::Check-Valid-Until=false"
          if [ ! -z "$HTTPS_PROXY" ]; then
            OPTIONS="$OPTIONS -o Acquire::Http::Proxy={{.HTTPS_PROXY}}"
          fi
          apt-get $OPTIONS update -yq
      # apt will return an error if fails to update any of its sources. Ignore these errors and let the "install_infra" task fail.
      ignore_error: true

    install_otel_collector:
      cmds:
        - |
          OPTIONS="-o DPkg::Lock::Timeout=60"
          if [ ! -z "$HTTPS_PROXY" ]; then
            OPTIONS="$OPTIONS -o Acquire::Http::Proxy={{.HTTPS_PROXY}}"
          fi
          apt-get $OPTIONS install nr-otel-collector -y -qq
      silent: true

    update_license_key:
      cmds:
        - |
          sed -i 's/${NEW_RELIC_LICENSE_KEY}/{{.NEW_RELIC_LICENSE_KEY}}/g' /etc/nr-otel-collector/config.yaml

    update_otel_end_point:
      cmds:
        - |
          region={{.NEW_RELIC_REGION}}
          if [ "{{.NEW_RELIC_REGION}}" = "STAGING" ]; then
            sed -i 's/^OTEL_EXPORTER_OTLP_ENDPOINT=.*$/OTEL_EXPORTER_OTLP_ENDPOINT=staging.otlp.nr-data.net:4317' /etc/nr-otel-collector/nr-otel-collector.conf
          elif [ "{{.NEW_RELIC_REGION}}" = "EU" ]; then
            sed -i 's/^OTEL_EXPORTER_OTLP_ENDPOINT=.*$/OTEL_EXPORTER_OTLP_ENDPOINT=otlp.eu01.nr-data.net:4317' /etc/nr-otel-collector/nr-otel-collector.conf
            fi     
              

    restart_otel_service:
      cmds:
        - |
          if [ {{.IS_SYSTEMCTL}} -gt 0 ]; then
            systemctl restart nr-otel-collector
          else 
            if [ {{.IS_INITCTL}} -gt 0 ]; then
              initctl restart nr-otel-collector
            else
              /etc/init.d/nr-otel-collector restart
            fi
          fi
      vars:
        IS_SYSTEMCTL:
          sh: command -v systemctl | wc -l
        IS_INITCTL:
          sh: command -v initctl | wc -l    

    assert_otel_collector_status_ok:
      cmds:
        - |
          is_otel_collector_present(){
            OTEL_COLLECTOR_PRESENT=$(ps aux | grep nr-otel-collector$ | wc -l)
            [[ $OTEL_COLLECTOR_PRESENT -gt 0 ]]
            return
          }

          MAX_RETRIES=150
          TRIES=0
          echo "Running Otel Collector agent status check attempt..."
          # wait for status endpoint to be ready
          while [ $TRIES -lt $MAX_RETRIES ]; do
            ((TRIES++))
            statusCheckOutput=$(curl http://localhost:13133/ -s | sed 's/.*"status":"\([^"]*\).*/\1/')
            if [ "$statusCheckOutput" == "Server available" ]; then
              echo "Agent status check ok."
              break
            else
              if [ "$statusCheckOutput" == "" ]; then
                if [ "$TRIES" -eq "$MAX_RETRIES" ]; then
                  if is_otel_collector_present; then
                    echo "detected nr_otel_collector process running"
                    exit 0
                  fi
                  echo "nr_otel_collector status endpoint not available" >&2
                  exit 32
                fi
              else
                if [ "$TRIES" -eq "$MAX_RETRIES" ]; then
                  if is_otel_collector_present; then
                    echo "detected nr_otel_collector process running"
                    exit 0
                  fi
                  echo "nr_otel_collector status check not healthy: $statusCheckOutput" >&2
                  exit 33
                fi
              fi
            fi

            sleep 2
          done

    
    post_instal:
      info: |2
          ⚙️  The New Relic Otel Collector Agent configuration file can be found in /etc/nr-otel-collector/config.yaml
          Edit this file to make changes or configure advanced features for the agent. See the docs for options:
          https://docs.newrelic.com/docs/more-integrations/open-source-telemetry-integrations/opentelemetry/collector/opentelemetry-collector-infra-hosts/              