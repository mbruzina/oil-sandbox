---
- debug:
    msg: Install .NET App

- name: Set default proxy_port (default to 5000)
  set_fact:
    proxy_port: "5005"
  when: proxy_port is undefined

- name: Set default is_selfcontained (default to false)
  set_fact:
    is_selfcontained: "false"
  when: is_selfcontained is undefined

- name: Set default use_executable for how to run the .NET process (default to false)
  set_fact:
    use_executable: "false"
  when: use_executable is undefined

- name: Set startup_command to executable (not dotnet xx.dll)
  set_fact:
    startup_command: "/var/www/{{ service_id }}/net5webapplication"
  when: use_executable|bool

- name: Set startup_command to dotnet command (use dotnet xx.dll)
  set_fact:
    startup_command: "/usr/bin/dotnet /var/www/{{ service_id }}/net5webapplication.dll"
  when: use_executable|bool == False

- name: Set default download url for self contained web app
  set_fact:
    web_app_url: "https://open-install-library-artifacts.s3-us-west-2.amazonaws.com/linux/.net/selfcontained-net5webapplication.zip"
  when: web_app_url is undefined and (is_selfcontained|bool)

- name: Set default download url for framwork dependent web app
  set_fact:
    web_app_url: "https://open-install-library-artifacts.s3-us-west-2.amazonaws.com/linux/.net/frameworkdependent-net5webapplication.zip"
  when: web_app_url is undefined and (is_selfcontained|bool == False)

- name: Init template variable for self contained application
  set_fact:
    apache_service_description: Self Contained .NET 5 APP.NET Core 5 Web app
    apache_proxy_port: 5006
  when: is_selfcontained|bool

- name: Init template variable for framework dependent application
  set_fact:
    apache_service_description: Framework Dependent .NET 5 APP.NET Core 5 Web app
    apache_proxy_port: 5001
  when: is_selfcontained|bool == False


- name: Copy web app net5webapplication file
  template:
    src: net5webapplication.service
    dest: /etc/systemd/system/{{ service_id }}.service
  become: true

- name: Install web app
  shell: |
    mkdir ~/{{ service_id }}
    cd ~/{{ service_id }}
    url="{{ web_app_url }}"
    curl $url -o {{ service_id }}.zip
    mkdir -p /var/www/{{ service_id }}
    unzip ./{{ service_id }}.zip -d /var/www/{{ service_id }}
    chmod -R 777 /var/www/{{ service_id }}
    chown -R ubuntu:ubuntu /var/www/{{ service_id }}
  become: true

- name: Listen on port {{ service_port }} for {{ service_id }}
  shell: echo 'Listen {{ service_port }}' >> /etc/apache2/ports.conf
  become: true

- name: Copy apache server {{ service_id }} status file
  template:
    src: net5webapplication.conf
    dest: /etc/apache2/conf-enabled/{{ service_id }}.conf
  become: true